import { useEffect, useState } from "react";
import { getRemainingNotReceived } from "@/services/graduatesService";

const NumberDisplay = () => {
  const [remainingCount, setRemainingCount] = useState<number | null>(null);
  const [roundNumber, setRoundNumber] = useState<number | null>(null);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res: any = await getRemainingNotReceived();
        if (res?.status === "success" && res.data) {
          console.log("üì¶ API Response:", res);
          setRemainingCount(res.data.remaining_not_received);
          setRoundNumber(res.data.round_number);
        }
      } catch (err) {
        console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err);
      }
    };

    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏±‡πâ‡∏á interval
    fetchData();

    const interval = setInterval(fetchData, 500); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å 0.5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

    return () => clearInterval(interval); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå interval ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å unmount
  }, []);

  return (
    <div className="min-h-screen flex flex-col items-center justify-center text-center p-4 ">
      {/* Header */}
      <div className="text-[100px] font-bold mb-6 text-orange-700 drop-shadow">
        {typeof roundNumber === "number"
          ? `‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà ${roundNumber}  ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠`
          : "‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà ‚Äì ‚Ä¢ ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠"}
      </div>

      {/* Number Display */}
      <div className="leading-none">
        <div className="text-[500px] font-black text-orange-600 drop-shadow-xl">
          {typeof remainingCount === "number"
            ? remainingCount.toLocaleString()
            : "‚Äì"}
        </div>
      </div>
    </div>
  );
};

export default NumberDisplay;
